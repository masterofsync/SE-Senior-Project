@model contracts.Models.RegisterUserContract
@{
    ViewBag.Title = "Register";
}
<style type="text/css">
    /* Styles for validation helpers*/
    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        background-color: #ffeeee !important;
    }

    .validation-summary-errors {
        font-weight: bold !important;
        color: #ff0000 !important;
    }

    .validation-summary-valid {
        display: none;
    }

    .error {
        color: #FF0000;
    }
</style>



<div class="container">
    <div class="row">
        <div id="Registerbox" class="col-md-8 col-md-offset-2 col-sm-8 col-sm-offset-2">
            <ol class="breadcrumb">

                <li class="active">@ViewBag.Title</li>

            </ol>
            <div class="panel panel-info">

                <div class="panel-body">
                    <section id="registerForm">
                        @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "registerForms" }))
                        {
                            <fieldset>
                                @Html.AntiForgeryToken()

                                <h4>Create a new account.</h4>
                                @Html.ValidationSummary()
                                <hr />

                                <div class="form-group">
                                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", required = "required" })
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger col-md-offset-3 col-md-9" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required", id = "Passwords" })

                                        </div>
                                        <div class="password-helper" style="font-size: 11px">
                                            Must contain: Atleast 6 mininum characters, 1 upper-case, lower-case, and a digit.
                                        </div>

                                    </div>
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger col-md-offset-3 col-md-9" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", required = "required", id = "ConfirmPassword" })
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger col-md-offset-3 col-md-9" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", required = "required", type = "email" })

                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger col-md-offset-3 col-md-9" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-3 col-md-9">
                                        <div class="g-recaptcha" data-sitekey="6LdnHBwUAAAAAFiR4SxVPyiPYlNnfH2Yz7mOlIj4"></div>
                                        <input type="hidden" name="recaptcha" data-rule-recaptcha="true">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-3 col-md-9">
                                        <input id="Registerbutton" type="submit" class="btn btn-primary" value="Register" />
                                    </div>
                                </div>


                            </fieldset>
                        }
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>
<script src='https://www.google.com/recaptcha/api.js'></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>

    $.validator.addMethod(
        'ContainsAtLeastOneDigit',
        function (value) {
            return /[0-9]/.test(value);
        },
        'Your password must contain at least one digit.'
    );
    $.validator.addMethod("recaptcha", function (value, element) {
        var grecaptcha = window.grecaptcha || null;
        return !grecaptcha || grecaptcha.getResponse();
    }, "Please fill reCAPTCHA");
    $.validator.addMethod(
        'ContainsAtLeastOneCapitalLetter',
        function (value) {
            return /[A-Z]/.test(value);
        },
        'Your password must contain at least one capital letter.'
    );
    $.validator.addMethod(
        'ContainsAtLeastOneLowerCaseLetter',
        function (value) {
            return /[a-z]/.test(value);
        },
        'Your password must contain at least one Lower Case letter.'
    );
    $.validator.addMethod(
        'isvalidEmail',
        function (value) {
            return /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(value);
        },
        'Please enter a valid email address.'
    );


    //password and confirm password... gives error if id and name is same. so for rule, put name and for equalto: put id here
    $('#registerForms').validate({
        ignore: '.no-validation',
        errorElement: "em",
        errorPlacement: function (error, element) {
            error.appendTo(element.closest(".col-md-9"));
        },
        rules: {
            UserName: {
                required: true,
                minlength: 6,
                maxlength: 50
            },
            Password: {
                required: true,
                minlength: 6,
                ContainsAtLeastOneDigit: true,
                ContainsAtLeastOneCapitalLetter: true,
                ContainsAtLeastOneLowerCaseLetter: true
            },
            ConfirmPassword: {
                minlength: 6,
                required: true,
                equalTo: "#Passwords"
            },
            Email: {
                isvalidEmail: true
            }
        }
    });
</script>
