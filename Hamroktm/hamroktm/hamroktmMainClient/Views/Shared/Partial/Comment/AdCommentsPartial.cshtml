@using System.Configuration
@model hamroktmMainClient.ViewModels.CommentsViewModel


@{
    var imagePath = ConfigurationManager.AppSettings["ImagePath"];
    var userImagePath = ConfigurationManager.AppSettings["UserImagePath"];
    var adComments = Model.AdComments.ToList();
    var httpCookie = Context.Request.Cookies["ebsCookie"];
    var userName = "";
    bool isAdmin = false;
    if (httpCookie != null && httpCookie["Username"] != null)
    {
        var cookie = httpCookie["Username"];
        if (cookie != null)
        {
            userName = cookie;
        }

        isAdmin = httpCookie["Role"] == "Admin";
    }
}

<style>
    .PostedOn {
        font-weight: normal;
        font-size: 11px;
        color: #767676;
    }

    span.removeComment {
        color: lightgray;
    }

    span.removeComment:hover {
        color: gray;
        cursor: pointer;
    }

    span.removeComment:active {
        color: lightgray;
    }

    .commentsLeft {
        max-width: 75px;
        width: 75px;
        height: 65px;
        max-height: 65px;
        display: flex;
        align-items: center;
        justify-content: center;
    }


    .commentsImage {
        max-width: 60px;
        max-height: 60px;
    }
</style>

@if (Model.AdComments != null)
{
    if (Model.AdComments.Any())
    {
        if (Model.AdComments.Count() < 5)
        {
            foreach (var comment in Model.AdComments)
            {
                <div class="singleComment">
                    <div class="media">
                        <div class="media-left">
                            <div class="thumbnail commentsLeft">
                                @if (comment.UserImage != null)
                                {
                                    <img src="@Url.Content(userImagePath + comment.UserImage)" class="media-object commentsImage">
                                }
                                else
                                {
                                    <img src="@Url.Content(imagePath + "defaultAvatar.jpg")" class="media-object commentsImage">
                                }
                            </div>
                        </div>
                        <div class="media-body">
                            @if (comment.CreatedBy.Equals(userName, StringComparison.InvariantCultureIgnoreCase) || userName.Equals(Model.adCreator, StringComparison.InvariantCultureIgnoreCase) || isAdmin)
                            {
                                <span data-commentid=@comment.CommentId class="removeComment glyphicon glyphicon-remove col-md-1 pull-right" title="Delete"></span>
                            }
                            <h5 class="media-heading"><b>@comment.CreatedBy</b> -- <span class="PostedOn">Posted On @comment.CreatedOn.ToShortDateString()</span></h5>
                            <p>@comment.Description</p>

                        </div>
                    </div>
                    <hr>
                </div>
            }
        }
        else
        {
            for (int i = 0; i < 5; i++)
            {
                <div class="singleComment">
                    <div class="media">
                        <div class="media-left">
                            <div class="thumbnail commentsLeft">
                                @if (adComments[i].UserImage != null)
                                {
                                    <img src="@Url.Content(userImagePath + adComments[i].UserImage)" class="media-object commentsImage ">
                                }
                                else
                                {
                                    <img src="@Url.Content(imagePath + "defaultAvatar.jpg")" class="media-object commentsImage ">
                                }
                            </div>
                        </div>
                        <div class="media-body">
                            @if (adComments[i].CreatedBy.Equals(userName, StringComparison.InvariantCultureIgnoreCase) || userName.Equals(Model.adCreator, StringComparison.InvariantCultureIgnoreCase) && userName != "" || isAdmin)
                            {
                                <span data-commentid=@adComments[i].CommentId class="removeComment glyphicon glyphicon-remove pull-right" title="Delete"></span>
                            }
                            <h5 class="media-heading"><b>@adComments[i].CreatedBy</b><span class="PostedOn">   &nbsp;&nbsp;   Posted On @adComments[i].CreatedOn.ToShortDateString()</span></h5>
                            <p>@adComments[i].Description</p>
                        </div>
                    </div>
                    <hr>
                </div>
            }
            <button id="showAllComments" class="btn btn-default btn-sm text-center">View All Comments</button>
            <div id="hiddenComments" class="hidden">
                @for (int i = 5; i < Model.AdComments.Count(); i++)
                {
                    <div class="singleComment">
                        <div class="media">
                            <div class="media-left commentsLefts">
                                @if (adComments[i].UserImage != null)
                                {
                                    <img src="@Url.Content(userImagePath + adComments[i].UserImage)" class="media-object commentsImage">
                                }
                                else
                                {
                                    <img src="@Url.Content(imagePath + "defaultAvatar.jpg")" class="media-object commentsImage">
                                }
                            </div>
                            <div class="media-body">
                                @if (adComments[i].CreatedBy.Equals(userName, StringComparison.InvariantCultureIgnoreCase) || userName.Equals(Model.adCreator, StringComparison.InvariantCultureIgnoreCase) || isAdmin)
                                {
                                    <span data-commentid=@adComments[i].CommentId class="removeComment glyphicon glyphicon-remove pull-right" title="Delete"></span>
                                }
                                <h5 class="media-heading"><b>@adComments[i].CreatedBy</b><span class="PostedOn">    &nbsp;&nbsp;  Posted On @adComments[i].CreatedOn.ToShortDateString()</span></h5>
                                <p>@adComments[i].Description</p>
                            </div>
                        </div>
                        <hr>
                    </div>
                }
            </div>
        }
    }
}
<script>
    $(document)
        .ready(function () {
            $("#showAllComments")
                .on("click",
                    function () {
                        $("#showAllComments").remove();
                        $("#hiddenComments").removeClass("hidden");
                    });

            $(".removeComment")
                .on("click",
                    function () {
                        var currentCommentId = $(this).attr("data-commentId");
                        var currentThis = $(this);
                        $.ajax({
                            url: '@Url.Action("DeleteComment","Comment")',
                            type: 'DELETE',
                            async: true,
                            data: { commentId: currentCommentId },
                            success: function () {
                                currentThis.closest("div.singleComment").remove();
                                alertify.success("Comment Deleted!");
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                alertify.error("Could not delete. Try Again later!");
                            }
                        });
                    });
        });
</script>
